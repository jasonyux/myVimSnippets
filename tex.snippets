# math context
global !p
def math():
    return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment():
    return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
    [x,y] = vim.eval("vimtex#env#is_inside('" + name + "')")
    return x != '0' and x != '0'

endglobal

# snippet for starting a template
snippet template "Basic template" b
\documentclass[a4paper]{article}

\usepackage{lecturenotes} % ~/texmf/tex/latex/commonstuff/lecturenotes.sty

\title{% 
    ${1:CSEE W3287}: ${2:Fundamentals of Computer Systems}\\\\ 
    ${3:Practice Sheet 12}
}

\author{Xiao xy2437}\date{\today}

\begin{document}
\maketitle

$0
\end{document}
endsnippet

# start snippet configuration

### Start of Environment snippets
snippet bgn "begin{} / end{}" bA
\begin{$1}
	$0
\end{$1}
endsnippet

snippet sec* "section*{}" bA
\section*{$1}
\label{sec*:$1}
    $0
endsnippet

snippet subsec* "subsection{}" bA
\subsection*{$1}
\label{subsec*:$1}
    $0
endsnippet

snippet sec "section{}" b
\newpage
\section{$1}
\label{sec:$1}
$0
endsnippet

snippet ssec "subsection{}" b
\subsection{$1}
\label{subsec:$1}
$0
endsnippet

snippet sssec "subsubsection{}" b
\subsubsection{$1}
\label{subsubsec:$1}
$0
endsnippet

snippet part* "part*{}" bA
\part*{$1}
\label{part*:$1}
$0
endsnippet

snippet olist "Enumerate" bA
\begin{enumerate}
    \item $1
    $0
\end{enumerate}
endsnippet

snippet ulist "Itemize" bA
\begin{itemize}
    \item $1
    $0
\end{itemize}
endsnippet

snippet item "Item" w
\item $0
endsnippet


snippet line "line" w
\noindent\rule{5cm}{0.4pt}\\\
$0
endsnippet

snippet fbox "framed" w
\begin{framed}
    $0 
\end{framed}
endsnippet

snippet proof "proof" w
\begin{proof}[Proof$1]
    $0
\end{proof}
endsnippet

snippet theo "my theorem" w
\begin{theorem}[$1]
    $0
\end{theorem}
endsnippet

#snippet theo "my theorem" w
#\begin{mytheo}[$1]
#    $0
#\end{mytheo}
#endsnippet

snippet def "my definition" w
\begin{definition}[$1]
    $0
\end{definition}
endsnippet

#snippet def "my definition" w
#\begin{mydef}[$1]
#    $0
#\end{mydef}
#endsnippet

snippet coro "my corollary" w
\begin{corollary}[$1]
    $0
\end{corollary}
endsnippet

#snippet coro "my corollary" w
#\begin{mycoro}[$1]
#    $0
#\end{mycoro}
#endsnippet

snippet deriv "my derivation" w
\begin{myderiv}[$1]
    $0
\end{myderiv}
endsnippet

snippet example "my example" w
\begin{example}[$1]
    $0
\end{example}
endsnippet

snippet note "my note" w
\begin{note}$1
    $0
\end{note}
endsnippet

snippet reminder "my reminder" w
\begin{reminder}$1
    $0
\end{reminder}
endsnippet

snippet comb "combination" w
\begin{pmatrix}$1 \\\ $0\end{pmatrix}
endsnippet

snippet inm "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
	snip.rv = ' '
else:
	snip.rv = ''
`$2
endsnippet

snippet dm "Math" wA
\[
$1
\] $0
endsnippet

snippet mit "Math italic" w
\mathit{$1} $0
endsnippet

snippet mrm "Math rm" wA
\mathrm{$1} $0
endsnippet

### End of Environment snippets

snippet aref "autoref" wA
\autoref{$1} $0
endsnippet

snippet hyref "hyperref" wA
\hyperref[$1]{$1} $0
endsnippet

# flipped with emph
snippet emph "textbf" w
\textcolor{red}{\textbf{$1}} $0
endsnippet

snippet "--(.*)--" "bold markdown" rA
\textbf{`!p snip.rv = match.group(1)`}
endsnippet

snippet "==(.*)==" "highlight markdown" rA
\textcolor{red}{\textbf{`!p snip.rv = match.group(1)`}}
endsnippet

snippet bold "italics" w
\textbf{$1} $0
endsnippet

snippet vspace "Visible Space" wA
\textvisiblespace
endsnippet

context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

snippet Rarr "implies" wA 
\Rightarrow $0
endsnippet

snippet iff "if and only if" wA
\iff $0
endsnippet

context "math()"
snippet inset "in a set" wA
\in
endsnippet

context "math()"
snippet nin "not in a set" wA
\notin
endsnippet

priority 10
context "math()"
snippet "over" "overline" riA
\overline{$1}$0
endsnippet

context "math()"
priority 100
snippet "([a-zA-Z])over" "overline" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

context "math()"
snippet exists "exists" wA
\exists
endsnippet

context "math()"
snippet ^ "superscript" iA
^{$1}$0
endsnippet

priority 1000
context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

snippet / "Fraction" i
\\frac{${VISUAL}}{$1}$0
endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "symbol frac" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
context "math()"
snippet '^.*\)/' "() frac" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
if stripped[i] == ')': depth += 1
if stripped[i] == '(': depth -= 1
if depth == 0: break;
i-=1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

# select text, press Tab, then press |_ to make evalAt
snippet |_ "PostEvalAt" A
\\left. ${VISUAL} \right|_{$1} $0
endsnippet

# normal evaluated at
snippet evalat "EvalAt" A
\left. $1 \right|_{$2} $0
endsnippet

priority 1000
snippet math "mathematica block" w
mmath $1 mmath$0
endsnippet

priority 10000
snippet 'mmath(.*)mmath' "evaluate mathematica" wr
`!p
import subprocess
code = 'ToString[' + match.group(1) + ', TeXForm]'
wolfram_script = '/mnt/c/Program Files/Wolfram Research/Mathematica/11.1/wolframscript.exe'
result = subprocess.check_output([wolfram_script, '-code', code])
snip.rv = result.decode("utf-8").replace("\r\n","\n")
`
endsnippet

# snippet for \bar{}, pre and post
priority 10
context "math()"
snippet "(?<!\\h)bar" "bar" wrA
\bar{$1}$0
endsnippet

#context "math()"
#priority 100
#snippet "([a-zA-Z])bar" "bar" wrA
#\bar{`!p snip.rv=match.group(1)`}
#endsnippet

priority 100
context "math()"
snippet ubar "underbar" wiA
\ubar{$1}$0
endsnippet

priority 1000
context "math()"
snippet "(?<!\\)hbar" "h bar" iwrA
\hbar
endsnippet

priority 10
context "math()"
snippet "hat" "bar" wriA
\hat{$1}$0
endsnippet

# vector post fix
snippet "(\\?\w+)(,\.|\.,)" "Vector postfix" riA
\vec{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "vec" "Vector prefix" riA
\vec{$1}$0
endsnippet

# align
snippet ali "Align" wb
\begin{align*}
	${1:${VISUAL}}
.\end{align*}
endsnippet

# neq
context "math()"
snippet neq "equals" iA
\neq 
endsnippet

# brackets
context "math()"
snippet () "left( right)" iA
\left(${1:${VISUAL}}\right)$0
endsnippet

# square brackets
context "math()"
snippet [] "left[ right]" iA
\left[${1:${VISUAL}}\right]$0
endsnippet

# magnitude
context "math()"
snippet || "left[ right]" iA
\left|${1:${VISUAL}}\right|$0
endsnippet

# bmatrix
snippet bmat "bmat" iA
\begin{bmatrix} 
    $1 
\end{bmatrix} $0
endsnippet

# bmatrix
snippet Bmat "Bmat" iA
\begin{Bmatrix} 
    $1 
\end{Bmatrix} $0
endsnippet

# left right angle
context "math()"
snippet lang "leftangle rightangle" iA
\left\langle ${1:${VISUAL}} \right\rangle $0
endsnippet

# set
context "math()"
snippet set "setof" w
\\{ $1 \\} $0
endsnippet

context "math()"
snippet set- "set minus" wA
\setminus
endsnippet

# text block
context "math()"
snippet txt "textBlock" i
\text{$1} $0
endsnippet

# summation
context "math()"
snippet sum "sum" wA
\sum\limits_{${1:n}} $0
endsnippet

# summation
context "math()"
snippet Sum "Sum" wA
\sum\limits_{n=${1:1}}^{${2:\infty}} $0
endsnippet

# integral
context "math()"
snippet defint "definit integral" wA
\int_{${1:a}}^{${2:b}} $3 \,d${4:t} $0
endsnippet

# limit
context "math()"
snippet lim "limit" wA
\lim\limits_{${1:n} \to ${2:\infty}} $0
endsnippet

# partial derivatives
context "math()"
snippet "(?<!\\)partial" "dp/dpx" wrA
\frac{\partial ${1:V}}{\partial ${2:x}} $0
endsnippet

# 2nd partial derivatives
context "math()"
snippet "(?<!\\)2part" "d2p/dpx2" wrA
\frac{\partial^2 ${1:V}}{\partial ${2:x}^2} $0
endsnippet

# derivatives
context "math()"
snippet deriv "d/dx" wA
\frac{d ${1:V}}{d ${2:x}} $0
endsnippet

# 2nd derivatives
context "math()"
snippet 2deriv "d2/dx2" wA
\frac{d^2 ${1:V}}{d ${2:x}^2} $0
endsnippet

# square root
context "math()"
snippet sqrt "\sqrt{}" iA
\sqrt{${1:${VISUAL}}} $0
endsnippet

# for all
context "math()"
snippet FA "forall" iA
\forall 
endsnippet

# cross product
context "math()"
snippet ** "cross" iA
\times 
endsnippet

# dot product
priority 100
snippet cdot "cdot" iA
\cdot 
endsnippet

# norm
context "math()"
snippet norm "norm" iA
\|$1\|$0
endsnippet

# operator norm
context "math()"
snippet opnorm "operator norm" iA
\|$1\|_{op} $0
endsnippet

# real numbers
context "math()"
snippet RR "real" iA
\mathbb{R}
endsnippet

context "math()"
snippet NN "natural" iA
\mathbb{N}
endsnippet

# some operators
snippet >= "greater equal" iA
\ge
endsnippet

snippet <= "less or equal" iA
\le
endsnippet

# cases
context "math()"
snippet cases "cases" wA
\begin{cases}
$1
\end{cases}
endsnippet

# text styles
context "math()"
snippet mS "mscript" wA
\mathcal{$1}$0
endsnippet

context "math()"
snippet mB "mbb" wA
\mathbb{$1}$0
endsnippet

# common symbols
priority 1000
context "math()"
snippet "(?<!\\)up" "uparrow" wr
\uparrow $0
endsnippet

priority 1000
context "math()"
snippet "(?<!\\)down" "downarrow" wr
\downarrow $0
endsnippet

priority 1000
context "math()"
snippet "(?<!\\)cos" "cosine" wrA
\cos{\left( $1 \right)} $0
endsnippet

priority 1000
context "math()"
snippet "(?<!\\)sin" "sine" wrA
\sin{\left( $1 \right)} $0
endsnippet

priority 1000
context "math()"
snippet "(?<!\\)bket" "braket" wrA
\braket{$1 | $2} $0
endsnippet

priority 1000
context "math()"
snippet "(?<!\\)dag" "dagger" wrA
\dagger
endsnippet

priority 1000
context "math()"
snippet "(?<!\\)theta" "theta" wrA
\theta
endsnippet

priority 1000
context "math()"
snippet "(?<!\\)Theta" "Theta" wrA
\Theta
endsnippet

priority 1000
context "math()"
snippet "(?<!\\)xi" "xi" wrA
\xi
endsnippet

priority 1000
context "math()"
snippet "(?<!\\)chi" "chi" wrA
\chi
endsnippet

priority 1000
context "math()"
snippet "(?<!\\)delta" "delta" wrA
\delta
endsnippet

priority 1000
context "math()"
snippet "(?<!\\)Delta" "Delta" wrA
\Delta
endsnippet

priority 1000
context "math()"
snippet "(?<!\\)sigma" "sigma" wrA
\sigma
endsnippet

priority 1000
context "math()"
snippet "(?<!\\)alpha" "alpha" wrA
\alpha
endsnippet

priority 1000
context "math()"
snippet "(?<!\\)beta" "beta" wrA
\beta
endsnippet

priority 1000
context "math()"
snippet "(?<!\\)gamma" "gamma" wrA
\gamma
endsnippet

priority 1000
context "math()"
snippet "(?<!\\)rho" "rho" wrA
\rho
endsnippet

priority 2000
snippet vphi "varphi" wA
\varphi
endsnippet

priority 1000
context "math()"
snippet "(?<!\\)nu" "nu" wrA
\nu
endsnippet

priority 1000
context "math()"
snippet "(?<!\\)mu" "mu" wrA
\mu
endsnippet

priority 1000
context "math()"
snippet "(?<!\\)eps" "epsilon" wrA
\epsilon
endsnippet

priority 1000
context "math()"
snippet "(?<!\\)pi" "pi" wrA
\pi
endsnippet

priority 1000
context "math()"
snippet "(?<!\\)nabla" "nabla" wrA
\nabla
endsnippet

priority 1000
context "math()"
snippet "(?<!\\)lambda" "lambda" wrA
\lambda
endsnippet

priority 1000
context "math()"
snippet lmda "lambda2" wA
\lambda
endsnippet

context "math()"
snippet tild "tilde" wA
\tilde{$1} $0
endsnippet

priority 1000
context "math()"
snippet NP "NP" wA
\mathcal{NP}
endsnippet

priority 1000
context "math()"
snippet PP "P" wA
\mathcal{P}
endsnippet

priority 1000
context "math()"
snippet "(?<!\\)Psi" "Psi" wrA
\Psi
endsnippet

priority 1000
context "math()"
snippet "(?<!\\)psi" "psi" wrA
\psi
endsnippet

priority 1000
context "math()"
snippet "(?<!\\)(?<!(var))phi" "phi" wrA
\phi
endsnippet

priority 1000
context "math()"
snippet "(?<!\\)Phi" "Phi" wrA
\Phi
endsnippet

priority 1000
context "math()"
snippet "(?<!\\)omega" "omega" wrA
\omega
endsnippet

priority 1000
context "math()"
snippet "(?<!\\)Omega" "Omega" wrA
\Omega
endsnippet

priority 1000
context "math()"
snippet "(?<!\\)infty" "infinity" wrA
\infty
endsnippet

### Start of TOC snippets
snippet toc "toc" w
\tableofcontents
endsnippet

snippet addtoc "add title to toc" wA
\addcontentsline{toc}{${1:section}}{${2:Unnumbered Section}}$0
endsnippet
### End of TOC snippets

### Start of Image Snippets
snippet "(.*)(\.png|\.jpg|\.jpeg)" "insert picture" rA
\begin{figure}[h!]
    \centering
    \includegraphics[scale=${1:0.5}]{./images/`!p snip.rv = match.group(1).strip()+match.group(2)`}
    \caption{$2}
    ${3:\label{fig:}}
\end{figure}\\\
$0
endsnippet

snippet mfig "multiple figures" wA
\begin{figure}[h!]
    \subfigure[${1:Accuracy Comparison}]{%
        \label{fig:acc_comp}%
    \includegraphics[scale=0.4]{./images/q4_acc.png}}%
    \qquad
    \subfigure[${2:Precision Comparison}]{%
        \label{fig:prec_comp}%
    \includegraphics[scale=0.4]{./images/q4_prec.png}}%
    \caption{${3:Test Performance Comparisons between MLE, KNN, and Naive Bayes}}
    \label{fig:test_perf_comp}
\end{figure}\\\
endsnippet
### end of image sippets

### Start of Code snippets
snippet code "code section" w
\begin{lstlisting}[language=$1]
$0
\end{lstlisting}
endsnippet

snippet ``` "inline code" wA
\lstinline{$1} $0
endsnippet

snippet "`(?!`)(.*)`" "inline code 2" rA
\lstinline{`!p snip.rv=match.group(1)`}
endsnippet
### End of Code snippets
