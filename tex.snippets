# math context
global !p
texMathZones = ['texMathZone' + x for x in ['A', 'AS', 'B', 'BS', 'C', 'CS', 'D', 'DS', 'E', 'ES', 'F', 'FS', 'G', 'GS', 'H', 'HS', 'I', 'IS', 'J', 'JS', 'K', 'KS', 'L', 'LS', 'DS', 'V', 'W', 'X', 'Y', 'Z', 'AmsA', 'AmsB', 'AmsC', 'AmsD', 'AmsE', 'AmsF', 'AmsG', 'AmsAS', 'AmsBS', 'AmsCS', 'AmsDS', 'AmsES', 'AmsFS', 'AmsGS' ]]
texIgnoreMathZones = ['texMathText']
texMathZoneIds = vim.eval('map('+str(texMathZones)+", 'hlID(v:val)')")
texIgnoreMathZoneIds = vim.eval('map('+str(texIgnoreMathZones)+", 'hlID(v:val)')")
ignore = texIgnoreMathZoneIds[0]
def math():
	currentline = vim.current.line
	if "mmath" in currentline:
		return False
	synstackids = vim.eval("synstack(line('.'), col('.') - (col('.')>=2 ? 1 : 0))")
	try:
		first = next(i for i in reversed(synstackids) if i in texIgnoreMathZoneIds or i in texMathZoneIds)
		return first != ignore
	except StopIteration:
		return False
endglobal

# snippet for starting a template
snippet template "Basic template" b
\documentclass[a4paper]{article}

\usepackage{lecturenotes} % ~/texmf/tex/latex/commonstuff/lecturenotes.sty

\title{% 
    ${1:CSEE W3287}: ${2:Fundamentals of Computer Systems}\\\\ 
    ${3:Practice Sheet 12}
}

\author{Xiao xy2437}\date{\today}

\begin{document}
\maketitle

$0
\end{document}
endsnippet

# start snippet configuration

### Start of Environment snippets
snippet bgn "begin{} / end{}" bA
\begin{$1}
	$0
\end{$1}
endsnippet

snippet sec* "section*{}" bA
\section*{$1}
\label{sec*:$1}
    $0
endsnippet

snippet subsec* "subsection{}" bA
\subsection*{$1}
\label{subsec*:$1}
    $0
endsnippet

snippet sec "section{}" b
\section{$1}
\label{sec:$1}
$0
endsnippet

snippet ssec "subsection{}" bA
\subsection{$1}
\label{subsec:$1}
$0
endsnippet

snippet sssec "subsubsection{}" bA
\subsubsection{$1}
\label{subsubsec:$1}
$0
endsnippet

snippet part* "part*{}" bA
\part*{$1}
\label{part*:$1}
$0
endsnippet

snippet olist "Enumerate" bA
\begin{enumerate}
    \item $1
    $0
\end{enumerate}
endsnippet

snippet ulist "Itemize" bA
\begin{itemize}
    \item $1
    $0
\end{itemize}
endsnippet

snippet item "Item" w
\item $0
endsnippet

snippet fbox "framed" w
\begin{framed}
    $0 
\end{framed}
endsnippet

snippet theo "my theorem" w
\begin{mytheo}$1
    $0
\end{mytheo}
endsnippet

snippet def "my definition" w
\begin{mydef}$1
    $0
\end{mydef}
endsnippet

snippet coro "my corollary" w
\begin{mycoro}$1
    $0
\end{mycoro}
endsnippet

snippet example "my example" w
\begin{example}$1
    $0
\end{example}
endsnippet

snippet note "my note" w
\begin{note}$1
    $0
\end{note}
endsnippet

snippet reminder "my reminder" w
\begin{reminder}$1
    $0
\end{reminder}
endsnippet

snippet inm "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
	snip.rv = ' '
else:
	snip.rv = ''
`$2
endsnippet

snippet dm "Math" wA
\[
$1
\] $0
endsnippet

### End of Environment snippets

snippet aref "autoref" wA
\autoref{$1} $0
endsnippet

snippet hyref "hyperref" wA
\hyperref[$1]{$1} $0
endsnippet

snippet vspace "Visible Space" wA
\textvisiblespace
endsnippet

context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

snippet Rarr "implies" wA 
\Rightarrow $0
endsnippet

snippet iff "if and only if" wA
\iff $0
endsnippet

context "math()"
snippet inset "in a set" wA
\in
endsnippet

context "math()"
snippet nin "not in a set" wA
\notin
endsnippet

priority 10
context "math()"
snippet "over" "overline" riA
\overline{$1}$0
endsnippet

context "math()"
priority 100
snippet "([a-zA-Z])over" "overline" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

context "math()"
snippet exists "exists" wA
\exists
endsnippet

context "math()"
snippet ^ "superscript" iA
^{$1}$0
endsnippet

context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

snippet / "Fraction" i
\\frac{${VISUAL}}{$1}$0
endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "symbol frac" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
context "math()"
snippet '^.*\)/' "() frac" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
if stripped[i] == ')': depth += 1
if stripped[i] == '(': depth -= 1
if depth == 0: break;
i-=1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

# select text, press Tab, then press |_ to make evalAt
snippet |_ "PostEvalAt" A
\\left. ${VISUAL} \right|_{$1} $0
endsnippet

# normal evaluated at
snippet evalat "EvalAt" A
\left. $1 \right|_{$2} $0
endsnippet

priority 1000
snippet math "mathematica block" w
mmath $1 mmath$0
endsnippet

priority 10000
snippet 'mmath(.*)mmath' "evaluate mathematica" wr
`!p
import subprocess
code = 'ToString[' + match.group(1) + ', TeXForm]'
wolfram_script = '/mnt/c/Program Files/Wolfram Research/Mathematica/11.1/wolframscript.exe'
result = subprocess.check_output([wolfram_script, '-code', code])
snip.rv = result.decode("utf-8").replace("\r\n","\n")
`
endsnippet

# snippet for \bar{}, pre and post
priority 10
context "math()"
snippet "bar" "bar" riA
\bar{$1}$0
endsnippet

context "math()"
priority 10
snippet "([a-zA-Z])bar" "bar" riA
\bar{`!p snip.rv=match.group(1)`}
endsnippet

priority 100
context "math()"
snippet "ubar" "underbar" riA
\ubar{$1}$0
endsnippet

# vector post fix
snippet "(\\?\w+)(,\.|\.,)" "Vector postfix" riA
\vec{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "vec" "Vector prefix" riA
\vec{$1}$0
endsnippet

# align
context "math()"
snippet ali "Align" bA
\begin{align*}
	${1:${VISUAL}}
.\end{align*}
endsnippet

# neq
context "math()"
snippet neq "equals" iA
\neq 
endsnippet

# brackets
context "math()"
snippet () "left( right)" iA
\left(${1:${VISUAL}}\right)$0
endsnippet

# bmatrix
snippet bmat "bmat" iA
\begin{bmatrix} 
    $1 
\end{bmatrix} $0
endsnippet

# left right angle
context "math()"
snippet lang "leftangle rightangle" iA
\left\langle ${1:${VISUAL}} \right\rangle $0
endsnippet

# set
context "math()"
snippet set "setof" w
\\{ $1 \\} $0
endsnippet

context "math()"
snippet set- "set minus" wA
\setminus
endsnippet

# text block
context "math()"
snippet textB "textBlock" iA
\text{ $1 } $0
endsnippet

# summation
context "math()"
snippet sum "sum" wA
\sum\limits_{n=${1:1}}^{${2:\infty}} $0
endsnippet

# integral
context "math()"
snippet defint "definit integral" wA
\int_{${1:a}}^{${2:b}} $0 \,d${3:t}
endsnippet

# limit
context "math()"
snippet lim "limit" wA
\lim\limits_{${1:n} \to ${2:\infty}} $0
endsnippet

# partial derivatives
context "math()"
snippet partial "dp/dpx" wA
\frac{\partial ${1:V}}{\partial ${2:x}} $0
endsnippet

# derivatives
context "math()"
snippet deriv "d/dx" wA
\frac{d ${1:V}}{d ${2:x}} $0
endsnippet

# square root
context "math()"
snippet sqrt "\sqrt{}" iA
\sqrt{${1:${VISUAL}}} $0
endsnippet

# for all
context "math()"
snippet FA "forall" iA
\forall 
endsnippet

# cross product
context "math()"
snippet xx "cross" iA
\times 
endsnippet

# dot product
priority 100
snippet ** "cdot" iA
\cdot 
endsnippet

# norm
context "math()"
snippet norm "norm" iA
\|$1\|$0
endsnippet

# operator norm
context "math()"
snippet opnorm "operator norm" iA
\|$1\|_{op} $0
endsnippet

# real numbers
context "math()"
snippet RR "real" iA
\mathbb{R}
endsnippet

context "math()"
snippet NN "natural" iA
\mathbb{N}
endsnippet

snippet >= "greater equal" iA
\ge
endsnippet

snippet <= "less or equal" iA
\le
endsnippet

# cases
context "math()"
snippet cases "cases" wA
\begin{cases}
    $1
\end{cases}
endsnippet

context "math()"
snippet cos "cosine" wA
\cos{$1} $0
endsnippet

context "math()"
snippet sin "sine" wA
\sin{$1} $0
endsnippet

context "math()"
snippet theta "theta" wA
\theta
endsnippet

snippet vphi "varphi" wA
\varphi
endsnippet

context "math()"
snippet nu "nu" wA
\nu
endsnippet

context "math()"
snippet lambda "lambda" wA
\lambda
endsnippet

context "math()"
snippet lmda "lambda2" wA
\lambda
endsnippet

context "math()"
snippet tild "tilde" wA
\tilde{$1} $0
endsnippet

context "math()"
snippet NP "NP" wA
\mathcal{NP}
endsnippet

context "math()"
snippet P "P" wA
\mathcal{P}
endsnippet

### Start of TOC snippets
snippet toc "toc" w
\tableofcontents
endsnippet

snippet addtoc "add title to toc" wA
\addcontentsline{toc}{${1:section}}{${2:Unnumbered Section}}$0
endsnippet
### End of TOC snippets

### Start of Image Snippets
snippet "(.*)(\.png|\.jpg|\.jpeg)" "insert picture" rA
\begin{figure}[h!]
    \centering
    \includegraphics[scale=1]{./`!p snip.rv = match.group(1)+match.group(2)`}
\end{figure}
endsnippet
### end of image sippets

### Start of Code snippets
snippet code "code section" w
\begin{lstlisting}[language=$1]
$0
\end{lstlisting}
endsnippet
### End of Code snippets
